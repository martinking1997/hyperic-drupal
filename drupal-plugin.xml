<!--

    NOTE: This copyright does *not* cover user programs that use HQ
    program services by normal system calls through the application
    program interfaces provided as part of the Hyperic Plug-in Development
    Kit or the Hyperic Client Development Kit - this is merely considered
    normal use of the program, and does *not* fall under the heading of
     "derived work".

     Copyright (C) [2009-2010], VMware, Inc.
     This file is part of HQ.

     HQ is free software; you can redistribute it and/or modify
     it under the terms version 2 of the GNU General Public License as
     published by the Free Software Foundation. This program is distributed
     in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
     even the implied warranty of MERCHANTABILITY or FITNESS FOR A
     PARTICULAR PURPOSE. See the GNU General Public License for more
     details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
     USA.


-->

<plugin>
  <property name="PLUGIN_VERSION" value="@project.version@"/>
  <classpath>
    <!-- for SQLQueryDetector -->
    <include name="pdk/plugins/sqlquery-plugin.jar"/>
    <!-- for JDBC drivers -->
    <include name="pdk/lib/jdbc"/>
  </classpath>

  <server name="Drupal" version="6">
    <property name="INVENTORY_ID" value="drupal"/>

    <property name="PROC_QUERY" value="State.Name.re=mysql(d|d_safe)"/>

    <!-- default properties -->
    <property name="jdbcUrl"
              value="jdbc:mysql://localhost:3306/drupaldb"/>
    <property name="jdbcDriver" value="com.mysql.jdbc.Driver"/>
    <property name="jdbcUser" value="user"/>
    <property name="jdbcPassword" value="password"/>

    <!-- config defined by the sqlquery plugin -->
    <config include="sql,http"/>

    <plugin type="measurement"
            class="org.hyperic.hq.product.MeasurementPlugin"/>

    <plugin type="autoinventory"
            class="org.hyperic.hq.plugin.sqlquery.SQLQueryDetector"/>

    <!-- "sql:" domain required to proxy through sqlquery-plugin -->
    <filter name="template" value="sql:${query}:${name}"/>

    <!-- use filters for common sql -->
    <filter name="count"
            value="SELECT COUNT(*) FROM"/>

    <metric name="Availability"
            template="${http.template}:Availability"
            indicator="true"/>

    <!-- row counts -->
    <filter name="query" value="${count} ${name}"/>

    <metric name="Number of Modules"
	template="sql:${count} system where type='module' :${name}"
            indicator="false"
	    type="static" />
    <metric name="Number of Enabled Modules"
	template="sql:${count} system where type='module' and status=1:${name}"
            indicator="true"
	    type="static"/>

    <metric name="Number of Themes"
	template="sql:${count} system where type='theme':${name}"
            indicator="false"
	    type="static" />
    <metric name="Number of Enabled Themes"
	template="sql:${count} system where type='theme' and status=1 :${name}"
            indicator="true"
	    collectionType="static"/>

    <metric name="Active Users"
	template="sql:${count}  users u where u.status = 1 :${name}"
            indicator="true"
           />
    <metric name="Number of Nodes"
	template="sql:${count} node :${name}"
            indicator="true"
           />
    <metric name="Number of Files"
	template="sql:${count} files :${name}"
            indicator="true"
           />

    <metric name="Number of Comments"
	template="sql:${count} comments :${name}"
            indicator="true"
           />
    <metric name="Number of Webform Submitted"
	template="sql:${count} webform_submitted_data :${name}"
            indicator="true"
	collectionType="trendsup"
           />


    <metric name="Logged-in Users Online"
	template="sql:select count(distinct uid) from  sessions where timestamp >= UNIX_TIMESTAMP( now()- interval 900 second) and uid > 0:${name}"
            indicator="true"
	    />
    <metric name="Anonymous Online"
	template="sql:select count(*) from  sessions where timestamp >= UNIX_TIMESTAMP( now()- interval 900 second) and uid = 0:${name}"
            indicator="true"
	    />

    <metric name="Number of Cache"
	template="sql:${count} cache :${name}"
        indicator="false"
        defaultOn="false"
           />
    <metric name="Number of Cache Block"
	template="sql:${count} cache_block :${name}"
        indicator="false"
        defaultOn="false"
           />
    <metric name="Number of Cache Browscap"
	template="sql:${count} cache_browscap :${name}"
        indicator="false"
        defaultOn="false"
           />
    <metric name="Number of Cache Content"
	template="sql:${count} cache_content :${name}"
            indicator="true"
           />
    <metric name="Number of Cache Filter"
	template="sql:${count} cache_filter :${name}"
        indicator="false"
        defaultOn="false"
           />
    <metric name="Number of Cache Form"
	template="sql:${count} cache_form :${name}"
           />
    <metric name="Number of Cache Menu"
	template="sql:${count} cache_menu :${name}"
        indicator="false"
        defaultOn="false"
           />
    <metric name="Number of Cache Page"
	template="sql:${count} cache_page :${name}"
        indicator="true"
        defaultOn="true"
           />
    <metric name="Number of Cache Update"
	template="sql:${count} cache_update :${name}"
           />
    <metric name="Number of Cache Views"
	template="sql:${count} cache_views :${name}"
           />
    <metric name="Number of Cache Views Data"
	template="sql:${count} cache_views_data :${name}"
           />

    <service name="Node">
      <!--plugin type="autoinventory"/ -->

      <config>
        <option name="title"
                description="Node title"/>
        <option name="vid"
                description="Node vid"/>
      </config>

      <!--property name="jdbcQuery"
                value="SELECT title, vid FROM NODE"/-->

      <!-- format for auto-discovered services -->
      <property name="AUTOINVENTORY_NAME" value="Drupal Node %title%"/>

      <metric name="Availability"
              template="${http.template},path=/?q=node/%vid%:Availability"
              indicator="true"/>

      <filter name="query" value="SELECT ${name} from NODE WHERE vid = %vid%"/>

      <metric name="Created"
              units="epoch-seconds"
              defaultOn="true"
              collectionType="static"/>

      <metric name="Changed"
              units="epoch-seconds"
              defaultOn="true"
              collectionType="static"/>
    <metric name="Number of Access"
	template="sql:select totalcount from  node_counter where nid = %vid%:${name}"
        defaultOn="false"
        interval="3600000"
	rate="1h"
	collectionType="trendsup"
    />
    </service>
  </server>
</plugin>
